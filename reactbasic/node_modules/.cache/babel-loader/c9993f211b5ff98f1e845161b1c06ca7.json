{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vishnu\\\\Desktop\\\\Charu_Practice\\\\React_Projects\\\\reactbasic\\\\src\\\\components\\\\Counter.js\";\nimport React from 'react';\n\nclass Counter extends React.Component {\n  //Initial Mount phase\n  constructor(props) {\n    super(props);\n\n    this.handleClickCount = () => {\n      const count = this.state.count;\n      this.setState({\n        count: count + 1\n      });\n    };\n\n    this.handleClickDecrement = () => {\n      const count = this.state.count;\n      this.setState({\n        count: count - 1\n      });\n    };\n\n    this.handleInput = e => {\n      console.log('value=', e.target.value);\n      this.setState({\n        name: e.target.value\n      });\n    };\n\n    console.log('constructor !!');\n    this.state = {\n      count: 0\n    };\n  } //Component Lifecycle methds\n\n\n  componentWillMount() {\n    console.log('Inside component Will Mount');\n  }\n\n  componentDidMount() {\n    console.log('Inside component Did Mount');\n  } //Update\n\n\n  componentWillReceiveProps() {}\n\n  componentWillUpdate() {\n    console.log('Inside componentWillUpdate');\n  }\n\n  componentDidUpdate() {\n    console.log('Inside componentDidUpdate');\n  }\n\n  shouldComponentUpdate() {\n    return true;\n  }\n\n  render() {\n    const _this$props = this.props,\n          text = _this$props.text,\n          text1 = _this$props.text1;\n    const _this$state = this.state,\n          name = _this$state.name,\n          count = _this$state.count;\n    console.log('Count is ', this.state.count);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Count : \", count), React.createElement(\"button\", {\n      name: \"Increment\",\n      onClick: this.handleClickCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, text), React.createElement(\"button\", {\n      name: \"Decrement\",\n      onClick: this.handleClickDecrement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, text1), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Name:\", name));\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["C:\\Users\\Vishnu\\Desktop\\Charu_Practice\\React_Projects\\reactbasic\\src\\components\\Counter.js"],"names":["React","Counter","Component","constructor","props","handleClickCount","count","state","setState","handleClickDecrement","handleInput","e","console","log","target","value","name","componentWillMount","componentDidMount","componentWillReceiveProps","componentWillUpdate","componentDidUpdate","shouldComponentUpdate","render","text","text1"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAN,SAAsBD,KAAK,CAACE,SAA5B,CAAqC;AACjC;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAkCtBC,gBAlCsB,GAkCJ,MAAM;AAAA,YACbC,KADa,GACJ,KAAKC,KADD,CACbD,KADa;AAEpB,WAAKE,QAAL,CAAe;AACXF,QAAAA,KAAK,EAACA,KAAK,GAAE;AADF,OAAf;AAGH,KAvCqB;;AAAA,SAyCtBG,oBAzCsB,GAyCA,MAAM;AAAA,YACjBH,KADiB,GACR,KAAKC,KADG,CACjBD,KADiB;AAExB,WAAKE,QAAL,CAAe;AACfF,QAAAA,KAAK,EAACA,KAAK,GAAE;AADE,OAAf;AAGH,KA9CqB;;AAAA,SA+CtBI,WA/CsB,GA+CPC,CAAD,IAAK;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,CAAC,CAACG,MAAF,CAASC,KAA/B;AAEA,WAAKP,QAAL,CAAc;AACVQ,QAAAA,IAAI,EAACL,CAAC,CAACG,MAAF,CAASC;AADJ,OAAd;AAGH,KArDqB;;AAEdH,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,SAAKN,KAAL,GAAW;AACPD,MAAAA,KAAK,EAAC;AADC,KAAX;AAGH,GARgC,CAUjC;;;AAEAW,EAAAA,kBAAkB,GAAE;AACpBL,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACC;;AAEDK,EAAAA,iBAAiB,GAAE;AACfN,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACH,GAlBgC,CAoBjC;;;AAEAM,EAAAA,yBAAyB,GAAE,CAE1B;;AACDC,EAAAA,mBAAmB,GAAE;AACjBR,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACH;;AACDQ,EAAAA,kBAAkB,GAAE;AAChBT,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACH;;AACDS,EAAAA,qBAAqB,GAAE;AAEnB,WAAO,IAAP;AACH;;AAsBDC,EAAAA,MAAM,GAAE;AAAA,wBACgB,KAAKnB,KADrB;AAAA,UACEoB,IADF,eACEA,IADF;AAAA,UACOC,KADP,eACOA,KADP;AAAA,wBAEgB,KAAKlB,KAFrB;AAAA,UAEES,IAFF,eAEEA,IAFF;AAAA,UAEOV,KAFP,eAEOA,KAFP;AAGJM,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,KAAKN,KAAL,CAAWD,KAApC;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcA,KAAd,CADD,EAEE;AAAQ,MAAA,IAAI,EAAC,WAAb;AAAyB,MAAA,OAAO,EAAE,KAAKD,gBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0DmB,IAA1D,CAFF,EAGE;AAAQ,MAAA,IAAI,EAAC,WAAb;AAAyB,MAAA,OAAO,EAAE,KAAKf,oBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8DgB,KAA9D,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKf,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWM,IAAX,CANF,CADJ;AAUH;;AAtEgC;;AAwEnC,eAAef,OAAf","sourcesContent":["import React from 'react';\r\n\r\nclass Counter extends React.Component{\r\n    //Initial Mount phase\r\n    constructor(props){\r\n        super(props);\r\n        console.log('constructor !!');\r\n        this.state={\r\n            count:0,\r\n        }\r\n    }\r\n\r\n    //Component Lifecycle methds\r\n\r\n    componentWillMount(){\r\n    console.log('Inside component Will Mount');\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log('Inside component Did Mount');\r\n    }\r\n\r\n    //Update\r\n\r\n    componentWillReceiveProps(){\r\n\r\n    }\r\n    componentWillUpdate(){\r\n        console.log('Inside componentWillUpdate');\r\n    }\r\n    componentDidUpdate(){\r\n        console.log('Inside componentDidUpdate');\r\n    }\r\n    shouldComponentUpdate(){\r\n        \r\n        return true;\r\n    }\r\n    \r\nhandleClickCount =() => {\r\n    const {count} = this.state;\r\n    this.setState ({\r\n        count:count +1,\r\n    });\r\n}\r\n\r\nhandleClickDecrement =() => {\r\n    const {count} = this.state;\r\n    this.setState ({\r\n    count:count -1,\r\n    });\r\n}\r\nhandleInput = (e)=>{\r\n    console.log('value=', e.target.value);\r\n\r\n    this.setState({\r\n        name:e.target.value,\r\n    });\r\n}\r\n    render(){\r\n        const{text,text1} = this.props;\r\n        const{name,count} = this.state;\r\n        console.log('Count is ' ,this.state.count);\r\n        return(\r\n            <div>\r\n             <div>Count : {count}</div>\r\n              <button name=\"Increment\" onClick={this.handleClickCount}>{text}</button>\r\n              <button name=\"Decrement\" onClick={this.handleClickDecrement}>{text1}</button>\r\n              <br/>\r\n              <input type=\"text\" onChange={this.handleInput}></input>\r\n              <div>Name:{name}</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n} export default Counter;"]},"metadata":{},"sourceType":"module"}